buildscript {
    repositories {
	    mavenLocal()
        jcenter()
    	maven { url "https://oss.sonatype.org/content/repositories/releases" }
    	maven { url "https://repo.mikeprimm.com" }
    	maven { url "https://repo.maven.apache.org/maven2" }
    	maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    	maven { url "https://repo.codemc.org/repository/maven-public/" }
        maven { url = 'https://files.minecraftforge.net/maven' }
    	maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id  "com.github.johnrengelman.shadow" version "2.0.4"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
	    	maven { url "https://jitpack.io" }
}
/*	repositories {
	        maven { url = 'https://files.minecraftforge.net/maven' }
		    mavenLocal()
	        jcenter()
	    	maven { url "https://oss.sonatype.org/content/repositories/releases" }
	    	maven { url "https://repo.mikeprimm.com" }
	    	maven { url "https://repo.maven.apache.org/maven2" }
	    	maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
	    	maven { url "https://repo.codemc.org/repository/maven-public/" }
	    	maven { url "https://jitpack.io" }
	}*/

dependencies {
    implementation project(":ConverterCore")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
ext.buildNumber = System.getenv().BUILD_NUMBER ?: "Dev"

minecraft {
    version = "1.12.2-14.23.5.2847"
	useDepAts = true
    mappings = "snapshot_20171031"
    runDir = 'run'
}

//project.archivesBaseName = "DataGenerator-base-forge-1.12.2"

shadowJar {
    dependencies {
        include(dependency(':ConverterCore'))
    }
    manifest {
        attributes([
                "Specification-Title": "DataGenerator",
                "Specification-Vendor": "DataGenerator",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"DataGenerator",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'FMLAT': 'accesstransformer.cfg'
        ])
        
    }
}

shadowJar.doLast {
    task ->
        ant.checksum file: task.archivePath
}


reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives deobfJar
}

build.dependsOn(shadowJar)
